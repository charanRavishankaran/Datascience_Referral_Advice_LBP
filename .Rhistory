testm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength+Duration_of_pain+Uses_corticosteroids, data = test1)
test_label <- test1[,"Treatment"]
test_matrix <- xgb.DMatrix(data = as.matrix(testm), label = test_label)
#Parameters
nc <-  length(unique(train_label))
xgb_params <- list("objective" = "multi:softmax", "eval_metric" = "mlogloss",
"num_class" = nc+1)
watchlist <- list(train = train_matrix, test = test_matrix)
bst_model <- xgb.train(params = xgb_params, data = train_matrix, nrounds = 302,
watchlist = watchlist, eta = 0.02,
max.depth = 5, gamma =0.5, subsample = 1 , colsample_bytree = 1)
print(bst_model)
e <- data.frame(bst_model$evaluation_log)
plot(e$iter, e$train_mlogloss, col = 'blue')
lines(e$iter, e$test_mlogloss, col = 'red')
min(e$test_mlogloss)
#e[e$test_mlogloss == 1.145671,]
e[e$test_mlogloss == 1.151852,]
p <- predict(bst_model, newdata = test_matrix)
unique(p)
unique(test_label)
head(p)
nc
length(test_label)
u <- union(p, test_label)
t <- table(factor(p, u), factor(test_label, u))
confusionMatrix(t)
rf <- randomForest(formula = Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over ,importance=TRUE)
#Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength+Duration_of_pain+Uses_corticosteroids
#Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength
#Treatment ~ Fever + Duration_of_pain + Irrational_thoughts_work +   Kinesiophobia_physical_exercise + Age + Uses_analgesics +  Serious_disease + Continuous_pain + Trauma + Paidwork, data = train1
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
print(rf)
plot(rf, )
#t <- tuneRF(train1[,-1],train1[,1],stepFactor = 0.5, plot=TRUE, ntreeTry = 300, trace = TRUE,
#           improve = 0.05)
varImpPlot(rf)
pre_train_mrf = predict(rf, train1, type = "class")
table(pre_train_mrf)
table(train1$Treatment)
u <- union(pre_train_mrf, train1$Treatment)
t <- table(factor(pre_train_mrf, u), factor(train1$Treatment, u))
confusionMatrix(t)
pre_train_mrf = predict(rf, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre_train_mrf)
table(test1$Treatment)
u <- union(pre_train_mrf, test1$Treatment)
t <- table(factor(pre_train_mrf, u), factor(test1$Treatment, u))
confusionMatrix(t)
pre_train_mrf = predict(rf, data_over, type = "class")
table(pre_train_mrf)
table(train1$Treatment)
u <- union(pre_train_mrf, train1$Treatment)
t <- table(factor(pre_train_mrf, u), factor(train1$Treatment, u))
pre_train_mrf = predict(rf, data_over, type = "class")
table(pre_train_mrf)
table(train1$Treatment)
u <- union(pre_train_mrf, data_over$Treatment)
t <- table(factor(pre_train_mrf, u), factor(data_over$Treatment, u))
confusionMatrix(t)
trainm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = data_over)
train_label <- data_over[,"Treatment"]
train_matrix <- xgb.DMatrix(data = as.matrix(trainm), label = train_label)
testm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = test1)
test_label <- test1[,"Treatment"]
test_matrix <- xgb.DMatrix(data = as.matrix(testm), label = test_label)
#Parameters
nc <-  length(unique(train_label))
xgb_params <- list("objective" = "multi:softmax", "eval_metric" = "mlogloss",
"num_class" = nc+1)
watchlist <- list(train = train_matrix, test = test_matrix)
bst_model <- xgb.train(params = xgb_params, data = train_matrix, nrounds = 302,
watchlist = watchlist, eta = 0.02,
max.depth = 5, gamma =0.5, subsample = 1 , colsample_bytree = 1)
print(bst_model)
p <- predict(bst_model, newdata = test_matrix)
unique(p)
unique(test_label)
head(p)
nc
length(test_label)
u <- union(p, test_label)
t <- table(factor(p, u), factor(test_label, u))
confusionMatrix(t)
e <- data.frame(bst_model$evaluation_log)
plot(e$iter, e$train_mlogloss, col = 'blue')
lines(e$iter, e$test_mlogloss, col = 'red')
min(e$test_mlogloss)
#e[e$test_mlogloss == 1.145671,]
e[e$test_mlogloss == 1.151852,]
e <- data.frame(bst_model$evaluation_log)
plot(e$iter, e$train_mlogloss, col = 'blue')
lines(e$iter, e$test_mlogloss, col = 'red')
min(e$test_mlogloss)
#e[e$test_mlogloss == 1.145671,]
e[e$test_mlogloss == 1.190814,]
trainm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = data_over)
train_label <- data_over[,"Treatment"]
train_matrix <- xgb.DMatrix(data = as.matrix(trainm), label = train_label)
testm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = test1)
test_label <- test1[,"Treatment"]
test_matrix <- xgb.DMatrix(data = as.matrix(testm), label = test_label)
#Parameters
nc <-  length(unique(train_label))
xgb_params <- list("objective" = "multi:softmax", "eval_metric" = "mlogloss",
"num_class" = nc+1)
watchlist <- list(train = train_matrix, test = test_matrix)
bst_model <- xgb.train(params = xgb_params, data = train_matrix, nrounds = 226,
watchlist = watchlist, eta = 0.02,
max.depth = 5, gamma =0.5, subsample = 1 , colsample_bytree = 1)
print(bst_model)
p <- predict(bst_model, newdata = test_matrix)
unique(p)
unique(test_label)
head(p)
nc
length(test_label)
u <- union(p, test_label)
t <- table(factor(p, u), factor(test_label, u))
confusionMatrix(t)
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = train1, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, train1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(train1$Treatment)
u <- union(pre_Train, train1$Treatment)
t <- table(factor(pre_Train, u), factor(train1$Treatment, u))
confusionMatrix(t)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(train1$Treatment)
u <- union(pre_Train, train1$Treatment)
t <- table(factor(pre_Train, u), factor(train1$Treatment, u))
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ . , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
tab <- table(train1$Treatment)
tab
prop.table(tab)
#data_over <- ovun.sample(Treatment~., data = train1, method = "over", N=nrow(train1))$data
set.seed(123)
data_over <- SMOTE(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength+Duration_of_pain+Uses_corticosteroids,train1,perc.over = 9000)
table(data_over$Treatment)
prop.table(table(data_over$Treatment))
tab <- table(train1$Treatment)
tab
prop.table(tab)
#data_over <- ovun.sample(Treatment~., data = train1, method = "over", N=nrow(train1))$data
set.seed(123)
data_over <- SMOTE(Treatment~ .,train1,perc.over = 9000)
table(data_over$Treatment)
prop.table(table(data_over$Treatment))
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength+Duration_of_pain+Uses_corticosteroids , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
tab <- table(train1$Treatment)
tab
prop.table(tab)
#data_over <- ovun.sample(Treatment~., data = train1, method = "over", N=nrow(train1))$data
set.seed(123)
data_over <- SMOTE(Treatment~ .,train1,perc.over = 9000)
table(data_over$Treatment)
prop.table(table(data_over$Treatment))
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength+Duration_of_pain+Uses_corticosteroids , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
# SEPARATING TEST AND TRAINING SET - FOR DT, LR, RF models
library(caTools)
set.seed(222)
sample = sample.split(new_df,SplitRatio = 0.70)
train1 =subset(new_df,sample ==TRUE)
test1=subset(new_df, sample==FALSE)
# PLOTTING GRAPH FOR TRAINING SET
one_Value_tr = filter(train1,train1$Treatment == 1)
two_Value_tr = filter(train1,train1$Treatment == 2)
three_Value_tr = filter(train1,train1$Treatment == 3)
four_Value_tr = filter(train1,train1$Treatment == 4)
five_Value_tr = filter(train1,train1$Treatment == 5)
length(one_Value_tr$Treatment)
length(two_Value_tr$Treatment)
length(three_Value_tr$Treatment)
length(four_Value_tr$Treatment)
length(five_Value_tr$Treatment)
print("----------------------")
H <- c(length(one_Value_tr$Treatment),length(two_Value_tr$Treatment),length(three_Value_tr$Treatment)
,length(four_Value_tr$Treatment),length(five_Value_tr$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP training Data Volumes",border="red")
pie(table(H))
# PLOTTING GRAPH FOR TEST SET
one_Value_te = filter(test1,test1$Treatment == 1)
two_Value_te = filter(test1,test1$Treatment == 2)
three_Value_te = filter(test1,test1$Treatment == 3)
four_Value_te = filter(test1,test1$Treatment == 4)
five_Value_te = filter(test1,test1$Treatment == 5)
length(one_Value_te$Treatment)
length(two_Value_te$Treatment)
length(three_Value_te$Treatment)
length(four_Value_te$Treatment)
length(five_Value_te$Treatment)
H <- c(length(one_Value_te$Treatment),length(two_Value_te$Treatment),length(three_Value_te$Treatment)
,length(four_Value_te$Treatment),length(five_Value_te$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP test Data Volumes",border="red")
tab <- table(train1$Treatment)
tab
prop.table(tab)
#data_over <- ovun.sample(Treatment~., data = train1, method = "over", N=nrow(train1))$data
set.seed(123)
data_over <- SMOTE(Treatment~ .,train1,perc.over = 9000)
table(data_over$Treatment)
prop.table(table(data_over$Treatment))
# DECISION TREE
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+low_back_pain_intensity+Paidwork
#Duration_of_pain+Earlier_hospitalization+Familiy_history+Irrational_thoughts_risk_lasting+Kinesiophobia_physical_exercise+Kinesiophobia_pain_stop+Age+Uses_analgesics+Uses_corticosteroids+Serious_disease+Neurogenic_signals+Continuous_pain+Decreased_mobility+Nocturnal_pain+neck_pain_intensity+low_back_pain_intensity+arm_left_pain_intensity+arm_right_pain_intensity+leg_left_pain_intensity+leg_right_pain_intensity
library(rpart)
library(rpart.plot)
decision <- rpart(Treatment~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength , data = data_over, method = "class",
control = rpart.control(minsplit =6, minbucket = round(5/3) ,maxdepth = 8, cp =0))
rpart.plot(decision,extra = 100)
pre_Train = predict(decision, data_over, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(data_over$Treatment)
u <- union(pre_Train, data_over$Treatment)
t <- table(factor(pre_Train, u), factor(data_over$Treatment, u))
confusionMatrix(t)
#head(pre)
pre = predict(decision, test1, type = "class")
#print(pre)
#print(test1$Treatment)
table(pre)
table(test1$Treatment)
u <- union(pre, test1$Treatment)
t <- table(factor(pre, u), factor(test1$Treatment, u))
confusionMatrix(t)
library(caTools)
set.seed(222)
sample = sample.split(new_df,SplitRatio = 0.70)
train1 =subset(new_df,sample ==TRUE)
test1=subset(new_df, sample==FALSE)
# PLOTTING GRAPH FOR TRAINING SET
one_Value_tr = filter(train1,train1$Treatment == 1)
two_Value_tr = filter(train1,train1$Treatment == 2)
three_Value_tr = filter(train1,train1$Treatment == 3)
four_Value_tr = filter(train1,train1$Treatment == 4)
five_Value_tr = filter(train1,train1$Treatment == 5)
length(one_Value_tr$Treatment)
length(two_Value_tr$Treatment)
length(three_Value_tr$Treatment)
length(four_Value_tr$Treatment)
length(five_Value_tr$Treatment)
print("----------------------")
H <- c(length(one_Value_tr$Treatment),length(two_Value_tr$Treatment),length(three_Value_tr$Treatment)
,length(four_Value_tr$Treatment),length(five_Value_tr$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP training Data Volumes",border="red")
pie(table(H))
# PLOTTING GRAPH FOR TEST SET
one_Value_te = filter(test1,test1$Treatment == 1)
two_Value_te = filter(test1,test1$Treatment == 2)
three_Value_te = filter(test1,test1$Treatment == 3)
four_Value_te = filter(test1,test1$Treatment == 4)
five_Value_te = filter(test1,test1$Treatment == 5)
length(one_Value_te$Treatment)
length(two_Value_te$Treatment)
length(three_Value_te$Treatment)
length(four_Value_te$Treatment)
length(five_Value_te$Treatment)
H <- c(length(one_Value_te$Treatment),length(two_Value_te$Treatment),length(three_Value_te$Treatment)
,length(four_Value_te$Treatment),length(five_Value_te$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP test Data Volumes",border="red")
library(caTools)
set.seed(222)
sample = sample.split(new_df,SplitRatio = 0.70)
train1 =subset(new_df,sample ==TRUE)
test1=subset(new_df, sample==FALSE)
# PLOTTING GRAPH FOR TRAINING SET
one_Value_tr = filter(train1,train1$Treatment == 1)
two_Value_tr = filter(train1,train1$Treatment == 2)
three_Value_tr = filter(train1,train1$Treatment == 3)
four_Value_tr = filter(train1,train1$Treatment == 4)
five_Value_tr = filter(train1,train1$Treatment == 5)
length(one_Value_tr$Treatment)
length(two_Value_tr$Treatment)
length(three_Value_tr$Treatment)
length(four_Value_tr$Treatment)
length(five_Value_tr$Treatment)
print("----------------------")
H <- c(length(one_Value_tr$Treatment),length(two_Value_tr$Treatment),length(three_Value_tr$Treatment)
,length(four_Value_tr$Treatment),length(five_Value_tr$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP training Data Volumes",border="red")
pie(table(H))
# PLOTTING GRAPH FOR TEST SET
one_Value_te = filter(test1,test1$Treatment == 1)
two_Value_te = filter(test1,test1$Treatment == 2)
three_Value_te = filter(test1,test1$Treatment == 3)
four_Value_te = filter(test1,test1$Treatment == 4)
five_Value_te = filter(test1,test1$Treatment == 5)
length(one_Value_te$Treatment)
length(two_Value_te$Treatment)
length(three_Value_te$Treatment)
length(four_Value_te$Treatment)
length(five_Value_te$Treatment)
H <- c(length(one_Value_te$Treatment),length(two_Value_te$Treatment),length(three_Value_te$Treatment)
,length(four_Value_te$Treatment),length(five_Value_te$Treatment))
M <- c("Advice","Rehab","surgery","inj/med","comb 1-4")
barplot.default(H,names.arg=M,xlab="Labels",ylab="Counts",col="blue",ylim=c(0,1000),main="LBP test Data Volumes",border="red")
tab <- table(train1$Treatment)
tab
prop.table(tab)
#data_over <- ovun.sample(Treatment~., data = train1, method = "over", N=nrow(train1))$data
set.seed(823)
data_over <- SMOTE(Treatment~.,train1,perc.over = 9000)
table(data_over$Treatment)
prop.table(table(data_over$Treatment))
data_over$Treatment <- as.numeric(data_over$Treatment)
trainm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = data_over)
train_label <- data_over[,"Treatment"]
train_matrix <- xgb.DMatrix(data = as.matrix(trainm), label = train_label)
testm <- sparse.model.matrix(Treatment ~ Continuous_pain+Uses_analgesics+Serious_disease+Fever+Trauma+Duration_of_pain+Irrational_thoughts_work+Age+Kinesiophobia_physical_exercise+Uses_corticosteroids+Paidwork+leg_left_pain_intensity+low_back_pain_intensity+Nocturnal_pain+Stress+ Depression+ Sick_leave+Loss_muscle_strength, data = test1)
test_label <- test1[,"Treatment"]
test_matrix <- xgb.DMatrix(data = as.matrix(testm), label = test_label)
#Parameters
nc <-  length(unique(train_label))
xgb_params <- list("objective" = "multi:softmax", "eval_metric" = "mlogloss",
"num_class" = nc+1)
watchlist <- list(train = train_matrix, test = test_matrix)
bst_model <- xgb.train(params = xgb_params, data = train_matrix, nrounds = 226,
watchlist = watchlist, eta = 0.02,
max.depth = 5, gamma =0.5, subsample = 1 , colsample_bytree = 1)
print(bst_model)
p <- predict(bst_model, newdata = test_matrix)
unique(p)
unique(test_label)
head(p)
nc
length(test_label)
u <- union(p, test_label)
t <- table(factor(p, u), factor(test_label, u))
confusionMatrix(t)
